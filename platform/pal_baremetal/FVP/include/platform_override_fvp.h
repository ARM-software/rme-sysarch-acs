/** @file
 * Copyright (c) 2022-2025, Arm Limited or its affiliates. All rights reserved.
 * SPDX-License-Identifier : Apache-2.0

 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
**/

/** Begin config **/

/* Settings */
#define PLATFORM_OVERRIDE_PRINT_LEVEL  0x3    //The permissible levels are 1,2,3,4 and 5

/* MMU PGT config parameters */
#define PLATFORM_PAGE_SIZE                 0x1000
#define PLATFORM_OVERRIDE_MMU_PGT_IAS      48
#define PLATFORM_OVERRIDE_MMU_PGT_OAS      48

/* PE platform config paramaters */
#define PLATFORM_OVERRIDE_PE_CNT           8
#define PLATFORM_OVERRIDE_PE0_INDEX        0x0
#define PLATFORM_OVERRIDE_PE0_MPIDR        0x00000

#define PLATFORM_OVERRIDE_PE1_INDEX        0x1
#define PLATFORM_OVERRIDE_PE1_MPIDR        0x00100

#define PLATFORM_OVERRIDE_PE2_INDEX        0x2
#define PLATFORM_OVERRIDE_PE2_MPIDR        0x00200

#define PLATFORM_OVERRIDE_PE3_INDEX        0x3
#define PLATFORM_OVERRIDE_PE3_MPIDR        0x00300

#define PLATFORM_OVERRIDE_PE4_INDEX        0x4
#define PLATFORM_OVERRIDE_PE4_MPIDR        0x10000

#define PLATFORM_OVERRIDE_PE5_INDEX        0x5
#define PLATFORM_OVERRIDE_PE5_MPIDR        0x10100

#define PLATFORM_OVERRIDE_PE6_INDEX        0x6
#define PLATFORM_OVERRIDE_PE6_MPIDR        0x10200

#define PLATFORM_OVERRIDE_PE7_INDEX        0x7
#define PLATFORM_OVERRIDE_PE7_MPIDR        0x10300

/* GIC platform config parameters*/
#define PLATFORM_OVERRIDE_GIC_VERSION       0x3
#define PLATFORM_OVERRIDE_CORE_COUNT        0x4
#define PLATFORM_OVERRIDE_CLUSTER_COUNT     0x2
#define PLATFORM_OVERRIDE_GICC_COUNT        8
#define PLATFORM_OVERRIDE_GICD_COUNT        0x1
#define PLATFORM_OVERRIDE_GICRD_COUNT       0x1
#define PLATFORM_OVERRIDE_GICITS_COUNT      0x1
#define PLATFORM_OVERRIDE_GICH_COUNT        0x0
#define PLATFORM_OVERRIDE_GICMSIFRAME_COUNT 0x0

#define PLATFORM_OVERRIDE_GICC_TYPE         0x1000
#define PLATFORM_OVERRIDE_GICD_TYPE         0x1001
#define PLATFORM_OVERRIDE_GICC_GICRD_TYPE   0x1002
#define PLATFORM_OVERRIDE_GICR_GICRD_TYPE   0x1003
#define PLATFORM_OVERRIDE_GICITS_TYPE       0x1004
#define PLATFORM_OVERRIDE_GICMSIFRAME_TYPE  0x1005
#define PLATFORM_OVERRIDE_GICH_TYPE         0x1006

#define PLATFORM_OVERRIDE_GICC_BASE         0x2C000000
#define PLATFORM_OVERRIDE_GICD_BASE         0x2F000000
#define PLATFORM_OVERRIDE_GICRD_BASE        0x2F100000
#define PLATFORM_OVERRIDE_GICIRD_LENGTH     0x200000

#define PLATFORM_OVERRIDE_GICITS_BASE       0x2F020000
#define PLATFORM_OVERRIDE_GICH_BASE         0x0
#define PLATFORM_OVERRIDE_GICITS0_BASE      0x2F020000
#define PLATFORM_OVERRIDE_GICITS0_ID        0x0

/*
 *Secure EL1 timer Flags, Non-Secure EL1 timer Flags, EL2 timer Flags,
 *and Virtual timer Flags all can have the same definition as follows.
 */
#define INTERRUPT_IS_LEVEL_TRIGGERED 0x0
#define INTERRUPT_IS_EDGE_TRIGGERED  0x1
#define INTERRUPT_IS_ACTIVE_HIGH     0x0
#define INTERRUPT_IS_ACTIVE_LOW      0x1

#define TIMER_MODE      INTERRUPT_IS_LEVEL_TRIGGERED
#define TIMER_POLARITY  INTERRUPT_IS_ACTIVE_LOW

#define TIMER_IS_SECURE     0x1

#define TIMER_IS_ALWAYS_ON_CAPABLE   0x1

/* Timer platform config parameters */
#define PLATFORM_OVERRIDE_S_EL1_TIMER_FLAGS     ((TIMER_POLARITY << 1) | (TIMER_MODE << 0))
#define PLATFORM_OVERRIDE_NS_EL1_TIMER_FLAGS    ((TIMER_POLARITY << 1) | (TIMER_MODE << 0))
#define PLATFORM_OVERRIDE_NS_EL2_TIMER_FLAGS    ((TIMER_POLARITY << 1) | (TIMER_MODE << 0))
#define PLATFORM_OVERRIDE_VIRTUAL_TIMER_FLAGS   ((TIMER_POLARITY << 1) | (TIMER_MODE << 0))
#define PLATFORM_OVERRIDE_S_EL1_TIMER_GSIV      0x1D
#define PLATFORM_OVERRIDE_NS_EL1_TIMER_GSIV     0x1E
#define PLATFORM_OVERRIDE_NS_EL2_TIMER_GSIV     0x1A
#define PLATFORM_OVERRIDE_VIRTUAL_TIMER_GSIV    0x1B
#define PLATFORM_OVERRIDE_EL2_VIR_TIMER_GSIV    0
#define PLATFORM_OVERRIDE_PLATFORM_TIMER_COUNT  0x2

#define PLATFORM_OVERRIDE_SYS_TIMER_TYPE        0x2001
#define PLATFORM_OVERRIDE_TIMER_TYPE            PLATFORM_OVERRIDE_SYS_TIMER_TYPE
#define PLATFORM_OVERRIDE_TIMER_COUNT           0x2
#define PLATFORM_OVERRIDE_TIMER_CNTCTL_BASE     0x2A810000

#define PLATFORM_OVERRIDE_TIMER_CNTBASE_0       0x2A820000
#define PLATFORM_OVERRIDE_TIMER_CNTEL0BASE_0    0xFFFFFFFFFFFFFFFF
#define PLATFORM_OVERRIDE_TIMER_GSIV_0          0x39
#define PLATFORM_OVERRIDE_TIMER_VIRT_GSIV_0     0x0
#define PLATFORM_OVERRIDE_TIMER_PHY_FLAGS_0     0x0
#define PLATFORM_OVERRIDE_TIMER_VIRT_FLAGS_0    0x0
#define PLATFORM_OVERRIDE_TIMER_CMN_FLAGS_0     ((TIMER_IS_ALWAYS_ON_CAPABLE << 1) | (TIMER_IS_SECURE << 0))
#define PLATFORM_OVERRIDE_TIMER_FLAGS_0         ((PLATFORM_OVERRIDE_TIMER_CMN_FLAGS_0 << 16) | \
                                                 (PLATFORM_OVERRIDE_TIMER_VIRT_FLAGS_0 << 8) | \
                                                 (PLATFORM_OVERRIDE_TIMER_PHY_FLAGS_0))

#define PLATFORM_OVERRIDE_TIMER_CNTBASE_1       0x2A830000
#define PLATFORM_OVERRIDE_TIMER_CNTEL0BASE_1    0xFFFFFFFFFFFFFFFF
#define PLATFORM_OVERRIDE_TIMER_GSIV_1          0x3A
#define PLATFORM_OVERRIDE_TIMER_VIRT_GSIV_1     0x0
#define PLATFORM_OVERRIDE_TIMER_PHY_FLAGS_1     0x0
#define PLATFORM_OVERRIDE_TIMER_VIRT_FLAGS_1    0x0
#define PLATFORM_OVERRIDE_TIMER_CMN_FLAGS_1     ((TIMER_IS_ALWAYS_ON_CAPABLE << 1) | (!TIMER_IS_SECURE << 0))
#define PLATFORM_OVERRIDE_TIMER_FLAGS_1         ((PLATFORM_OVERRIDE_TIMER_CMN_FLAGS_1 << 16) | \
                                                 (PLATFORM_OVERRIDE_TIMER_VIRT_FLAGS_1 << 8) | \
                                                 (PLATFORM_OVERRIDE_TIMER_PHY_FLAGS_1))
#define PLATFORM_OVERRIDE_TIMER_CNTFRQ         0x0

/* Define the Timeout values to be used */
#define PLATFORM_OVERRIDE_TIMEOUT_LARGE         0x100000
#define PLATFORM_OVERRIDE_TIMEOUT_MEDIUM        0x10000
#define PLATFORM_OVERRIDE_TIMEOUT_SMALL         0x100

/* PCIE platform config parameters */
#define PLATFORM_OVERRIDE_NUM_ECAM                1
#define PLATFORM_MAX_HB_COUNT                     1

/* Offset from the memory range to be accesed
 * Modify this macro w.r.t to the requirement */
#define MEM_OFFSET_SMALL   0x10
#define MEM_OFFSET_MEDIUM  0x1000

/* Platform config parameters for ECAM_0 */
#define PLATFORM_OVERRIDE_PCIE_ECAM_BASE_ADDR_0   0x40000000
#define PLATFORM_OVERRIDE_PCIE_SEGMENT_GRP_NUM_0  0x0
#define PLATFORM_OVERRIDE_PCIE_START_BUS_NUM_0    0x0
#define PLATFORM_OVERRIDE_PCIE_END_BUS_NUM_0      0x11

#define PLATFORM_OVERRIDE_PCIE_ECAM0_HB_COUNT       1
#define PLATFORM_OVERRIDE_PCIE_ECAM0_SEG_NUM        0x0
#define PLATFORM_OVERRIDE_PCIE_ECAM0_START_BUS_NUM  0x0
#define PLATFORM_OVERRIDE_PCIE_ECAM0_END_BUS_NUM    0x8
#define PLATFORM_OVERRIDE_PCIE_ECAM0_EP_BAR64       0x4000200000
#define PLATFORM_OVERRIDE_PCIE_ECAM0_RP_BAR64       0x4000000000
#define PLATFORM_OVERRIDE_PCIE_ECAM0_HB_BAR64       0x4000100000
#define PLATFORM_OVERRIDE_PCIE_ECAM0_EP_NPBAR32     0x50400000
#define PLATFORM_OVERRIDE_PCIE_ECAM0_EP_PBAR32      0x50000000
#define PLATFORM_OVERRIDE_PCIE_ECAM0_RP_BAR32       0x50800000
#define PLATFORM_OVERRIDE_PCIE_ECAM0_HB_BAR32       0x50C00000

#define PLATFORM_BM_OVERRIDE_PCIE_MAX_BUS      0x12
#define PLATFORM_BM_OVERRIDE_PCIE_MAX_DEV      32
#define PLATFORM_BM_OVERRIDE_PCIE_MAX_FUNC     8

/* Sample macros for ECAM_1
 * #define PLATFORM_OVERRIDE_PCIE_ECAM_BASE_ADDR_1  0x00000000
 * #define PLATFORM_OVERRIDE_PCIE_SEGMENT_GRP_NUM_1 0x0
 * #define PLATFORM_OVERRIDE_PCIE_START_BUS_NUM_1   0x0
 * #define PLATFORM_OVERRIDE_PCIE_END_BUS_NUM_1     0x0
 */


/* PCIE device hierarchy table */

#define PLATFORM_PCIE_NUM_ENTRIES        7
#define PLATFORM_PCIE_P2P_NOT_SUPPORTED  1

#define PLATFORM_PCIE_DEV0_CLASSCODE     0x6000000
#define PLATFORM_PCIE_DEV0_VENDOR_ID     0x13B5
#define PLATFORM_PCIE_DEV0_DEV_ID        0xDEF
#define PLATFORM_PCIE_DEV0_BUS_NUM       0
#define PLATFORM_PCIE_DEV0_DEV_NUM       0
#define PLATFORM_PCIE_DEV0_FUNC_NUM      0
#define PLATFORM_PCIE_DEV0_SEG_NUM       0
#define PLATFORM_PCIE_DEV0_DMA_SUPPORT   1
#define PLATFORM_PCIE_DEV0_DMA_COHERENT  0
#define PLATFORM_PCIE_DEV0_P2P_SUPPORT   0
#define PLATFORM_PCIE_DEV0_DMA_64BIT     0
#define PLATFORM_PCIE_DEV0_BEHIND_SMMU   1
#define PLATFORM_PCIE_DEV0_ATC_SUPPORT   0

#define PLATFORM_PCIE_DEV1_CLASSCODE     0x6040000
#define PLATFORM_PCIE_DEV1_VENDOR_ID     0x13B5
#define PLATFORM_PCIE_DEV1_DEV_ID        0xDEF
#define PLATFORM_PCIE_DEV1_BUS_NUM       0
#define PLATFORM_PCIE_DEV1_DEV_NUM       1
#define PLATFORM_PCIE_DEV1_FUNC_NUM      0
#define PLATFORM_PCIE_DEV1_SEG_NUM       0
#define PLATFORM_PCIE_DEV1_DMA_SUPPORT   1
#define PLATFORM_PCIE_DEV1_DMA_COHERENT  0
#define PLATFORM_PCIE_DEV1_P2P_SUPPORT   0
#define PLATFORM_PCIE_DEV1_DMA_64BIT     0
#define PLATFORM_PCIE_DEV1_BEHIND_SMMU   1
#define PLATFORM_PCIE_DEV1_ATC_SUPPORT   0

#define PLATFORM_PCIE_DEV2_CLASSCODE     0x6040000
#define PLATFORM_PCIE_DEV2_VENDOR_ID     0x13B5
#define PLATFORM_PCIE_DEV2_DEV_ID        0xDEF
#define PLATFORM_PCIE_DEV2_BUS_NUM       0
#define PLATFORM_PCIE_DEV2_DEV_NUM       2
#define PLATFORM_PCIE_DEV2_FUNC_NUM      0
#define PLATFORM_PCIE_DEV2_SEG_NUM       0
#define PLATFORM_PCIE_DEV2_DMA_SUPPORT   1
#define PLATFORM_PCIE_DEV2_DMA_COHERENT  0
#define PLATFORM_PCIE_DEV2_P2P_SUPPORT   0
#define PLATFORM_PCIE_DEV2_DMA_64BIT     0
#define PLATFORM_PCIE_DEV2_BEHIND_SMMU   1
#define PLATFORM_PCIE_DEV2_ATC_SUPPORT   0

#define PLATFORM_PCIE_DEV3_CLASSCODE     0x6040000
#define PLATFORM_PCIE_DEV3_VENDOR_ID     0x13B5
#define PLATFORM_PCIE_DEV3_DEV_ID        0xED01
#define PLATFORM_PCIE_DEV3_BUS_NUM       0
#define PLATFORM_PCIE_DEV3_DEV_NUM       0x1F
#define PLATFORM_PCIE_DEV3_FUNC_NUM      0
#define PLATFORM_PCIE_DEV3_SEG_NUM       0
#define PLATFORM_PCIE_DEV3_DMA_SUPPORT   1
#define PLATFORM_PCIE_DEV3_DMA_COHERENT  0
#define PLATFORM_PCIE_DEV3_P2P_SUPPORT   0
#define PLATFORM_PCIE_DEV3_DMA_64BIT     0
#define PLATFORM_PCIE_DEV3_BEHIND_SMMU   1
#define PLATFORM_PCIE_DEV3_ATC_SUPPORT   0

#define PLATFORM_PCIE_DEV4_CLASSCODE     0xED000000
#define PLATFORM_PCIE_DEV4_VENDOR_ID     0x13B5
#define PLATFORM_PCIE_DEV4_DEV_ID        0xED01
#define PLATFORM_PCIE_DEV4_BUS_NUM       1
#define PLATFORM_PCIE_DEV4_DEV_NUM       0
#define PLATFORM_PCIE_DEV4_FUNC_NUM      0
#define PLATFORM_PCIE_DEV4_SEG_NUM       0
#define PLATFORM_PCIE_DEV4_DMA_SUPPORT   1
#define PLATFORM_PCIE_DEV4_DMA_COHERENT  0
#define PLATFORM_PCIE_DEV4_P2P_SUPPORT   0
#define PLATFORM_PCIE_DEV4_DMA_64BIT     0
#define PLATFORM_PCIE_DEV4_BEHIND_SMMU   1
#define PLATFORM_PCIE_DEV4_ATC_SUPPORT   0

#define PLATFORM_PCIE_DEV5_CLASSCODE     0xED000000
#define PLATFORM_PCIE_DEV5_VENDOR_ID     0x13B5
#define PLATFORM_PCIE_DEV5_DEV_ID        0xED01
#define PLATFORM_PCIE_DEV5_BUS_NUM       1
#define PLATFORM_PCIE_DEV5_DEV_NUM       0
#define PLATFORM_PCIE_DEV5_FUNC_NUM      1
#define PLATFORM_PCIE_DEV5_SEG_NUM       0
#define PLATFORM_PCIE_DEV5_DMA_SUPPORT   1
#define PLATFORM_PCIE_DEV5_DMA_COHERENT  0
#define PLATFORM_PCIE_DEV5_P2P_SUPPORT   0
#define PLATFORM_PCIE_DEV5_DMA_64BIT     0
#define PLATFORM_PCIE_DEV5_BEHIND_SMMU   1
#define PLATFORM_PCIE_DEV5_ATC_SUPPORT   0

#define PLATFORM_PCIE_DEV6_CLASSCODE     0xED000000
#define PLATFORM_PCIE_DEV6_VENDOR_ID     0x13B5
#define PLATFORM_PCIE_DEV6_DEV_ID        0xED01
#define PLATFORM_PCIE_DEV6_BUS_NUM       2
#define PLATFORM_PCIE_DEV6_DEV_NUM       0
#define PLATFORM_PCIE_DEV6_FUNC_NUM      0
#define PLATFORM_PCIE_DEV6_SEG_NUM       0
#define PLATFORM_PCIE_DEV6_DMA_SUPPORT   1
#define PLATFORM_PCIE_DEV6_DMA_COHERENT  0
#define PLATFORM_PCIE_DEV6_P2P_SUPPORT   0
#define PLATFORM_PCIE_DEV6_DMA_64BIT     0
#define PLATFORM_PCIE_DEV6_BEHIND_SMMU   1
#define PLATFORM_PCIE_DEV6_ATC_SUPPORT   0

#define PLATFORM_PCIE_DEV7_CLASSCODE     0xED000000
#define PLATFORM_PCIE_DEV7_VENDOR_ID     0x13B5
#define PLATFORM_PCIE_DEV7_DEV_ID        0xED01
#define PLATFORM_PCIE_DEV7_BUS_NUM       2
#define PLATFORM_PCIE_DEV7_DEV_NUM       0
#define PLATFORM_PCIE_DEV7_FUNC_NUM      1
#define PLATFORM_PCIE_DEV7_SEG_NUM       0
#define PLATFORM_PCIE_DEV7_DMA_SUPPORT   1
#define PLATFORM_PCIE_DEV7_DMA_COHERENT  0
#define PLATFORM_PCIE_DEV7_P2P_SUPPORT   0
#define PLATFORM_PCIE_DEV7_DMA_64BIT     0
#define PLATFORM_PCIE_DEV7_BEHIND_SMMU   1
#define PLATFORM_PCIE_DEV7_ATC_SUPPORT   0

/* PERIPHERAL platform config parameters */
#define PLATFORM_OVERRIDE_PERIPHERAL_COUNT 1  //UART

#define UART_ADDRESS                     0xF9750000
#define BASE_ADDRESS_ADDRESS             0x1C0B0000
#define UART_GLOBAL_SYSTEM_INTERRUPT     0x25
#define UART_CLK_IN_HZ                   24000000
#define UART_BAUD_RATE_BPS               115200

/* IOVIRT platform config parameters */
/* IOVIRT platform config parameters */
#define IOVIRT_ADDRESS                0xF280AC18
#define IORT_NODE_COUNT               3
#define NUM_ITS_COUNT                 1
#define IOVIRT_ITS_COUNT              1
#define IOVIRT_SMMUV3_COUNT           1
#define IOVIRT_RC_COUNT               1
#define IOVIRT_SMMUV2_COUNT           0
#define IOVIRT_NAMED_COMPONENT_COUNT  0
#define IOVIRT_PMCG_COUNT             0
#define IOVIRT_SMMUV3_0_BASE_ADDRESS  0x2B400000
#define IOVIRT_SMMU_CTX_INT_OFFSET    0x0
#define IOVIRT_SMMU_CTX_INT_CNT       0x0
#define IOVIRT_RC_PCI_SEG_NUM         0x0
#define IOVIRT_RC_MEMORY_PROPERTIES   0x0
#define IOVIRT_RC_ATS_ATTRIBUTE       0x1

#define IOVIRT_RC_NUM_MAP             1
#define IOVIRT_SMMUV3_0_NUM_MAP       1
#define IOVIRT_MAX_NUM_MAP            2

#define RC_MAP0_INPUT_BASE            0x0
#define RC_MAP0_ID_COUNT              0xFFFF
#define RC_MAP0_OUTPUT_BASE           0x0
#define RC_MAP0_OUTPUT_REF            0x250

#define SMMUV3_0_ID_MAP0_INPUT_BASE   0x0
#define SMMUV3_0_ID_MAP0_ID_COUNT     0xFFFF
#define SMMUV3_0_ID_MAP0_OUTPUT_BASE  0x0
#define SMMUV3_0_ID_MAP0_OUTPUT_REF   0x18

/* DMA platform config parameters */
#define PLATFORM_OVERRIDE_DMA_CNT   0

/*Exerciser platform config details*/
#define TEST_REG_COUNT              10
#define EXERCISER_ID                0xED0113B5
#define PCIE_CAP_CTRL_OFFSET        0x4// offset from the extended capability header

/* Exerciser MMIO Offsets */
#define INTXCTL         0x004
#define MSICTL          0x000
#define DMACTL1         0x08
#define DMA_BUS_ADDR    0x010
#define DMA_LEN         0x018
#define DMASTATUS       0x01C
#define PCI_MAX_BUS     255
#define PCI_MAX_DEVICE  31
#define PASID_VAL       0x020
#define ATSCTL          0x024
#define TXN_TRACE       0x40
#define TXN_CTRL_BASE   0x44
#define ATS_ADDR        0x028

#define DVSEC_CTRL      0x8
#define PCI_EXT_CAP_ID  0x10
#define PASID           0x1B
#define PCIE            0x1
#define PCI             0x0
#define DVSEC           0x0023
#define AER             0x0001

/* PCI/PCIe express extended capability structure's
   next capability pointer mask and cap ID mask */
#define PCIE_NXT_CAP_PTR_MASK 0x0FFF
#define PCIE_CAP_ID_MASK      0xFFFF
#define PCI_CAP_ID_MASK       0x00FF
#define PCI_NXT_CAP_PTR_MASK  0x00FF
#define CAP_PTR_MASK          0x00FF

#define CLR_INTR_MASK       0xFFFFFFFE
#define PASID_TLP_STOP_MASK 0xFFFFFFBF
#define PASID_VAL_MASK      ((0x1ul << 20) - 1)
#define PASID_VAL_SHIFT     12
#define PASID_LEN_SHIFT     7
#define PASID_LEN_MASK      0x7ul
#define PASID_EN_SHIFT      6
#define DMA_TO_DEVICE_MASK  0xFFFFFFEF

/* shift_bit */
#define SHIFT_1BIT             1
#define SHIFT_2BIT             2
#define SHIFT_4BIT             4
#define SHITT_8BIT             8
#define MASK_BIT               1
#define PREFETCHABLE_BIT_SHIFT 3
#define ERR_CODE_SHIFT         20
#define FATAL_SHIFT            31
#define ERROR_INJECT_BIT       17

#define PCI_CAP_PTR_OFFSET  8
#define PCIE_CAP_PTR_OFFSET 20

#define MSI_GENERATION_MASK (1 << 31)

#define NO_SNOOP_START_MASK 0x20
#define NO_SNOOP_STOP_MASK  0xFFFFFFDF
#define PCIE_CAP_DIS_MASK   0xFFFEFFFF
#define PCIE_CAP_EN_MASK    (1 << 16)
#define PASID_EN_MASK       (1 << 6)

/* PCIe Config space Offset */
#define BAR0_OFFSET        0x10
#define COMMAND_REG_OFFSET 0x04
#define CAP_PTR_OFFSET     0x34
#define PCIE_CAP_OFFSET    0x100

#define RID_CTL_REG    0x3C
#define RID_VALUE_MASK 0xFFFF
#define RID_VALID_MASK (1ul << 31)
#define RID_VALID      1
#define RID_NOT_VALID  0
#define ATS_TRIGGER    1
#define ATS_INV        (1 << 5)
#define ATS_STATUS     (1ul << 7)
#define TXN_INVALID    0xFFFFFFFF
#define TXN_START      1
#define TXN_STOP       0

#define PCIE_CAP_CTRL_OFFSET 0x4// offset from the extended capability header

#define PLATFORM_OVERRIDE_RP_REG_NUM_ENTRIES  0

/* Platform Specifc details and system configurations */

#define IS_LEGACY_TZ_ENABLED 0x0

#define IS_NS_ENCRYPTION_PROGRAMMABLE 0x0

#define IS_PAS_FILTER_MODE_PROGRAMMABLE 0x0

#define GPC_PROTECTED_REGION_CNT 0x4

#define GPC_PROTECTED_REGION_0_START_ADDR 0xFFC00000
#define GPC_PROTECTED_REGION_0_SIZE 0x300000
#define GPC_PROTECTED_REGION_0_PAS 0x2

#define GPC_PROTECTED_REGION_1_START_ADDR 0XFDC00000
#define GPC_PROTECTED_REGION_1_SIZE 0x2000000
#define GPC_PROTECTED_REGION_1_PAS 0x3

#define GPC_PROTECTED_REGION_2_START_ADDR 0XFC000000
#define GPC_PROTECTED_REGION_2_SIZE 0x1C00000
#define GPC_PROTECTED_REGION_2_PAS 0x0

#define GPC_PROTECTED_REGION_3_START_ADDR 0X80000000
#define GPC_PROTECTED_REGION_3_SIZE 0x7C000000
#define GPC_PROTECTED_REGION_3_PAS 0x1


#define PAS_PROTECTED_REGION_CNT 0x4

#define PAS_PROTECTED_REGION_0_START_ADDR 0xFFC00000
#define PAS_PROTECTED_REGION_0_SIZE 0x3000000
#define PAS_PROTECTED_REGION_0_PAS 0x2

#define PAS_PROTECTED_REGION_1_START_ADDR 0XFDC00000
#define PAS_PROTECTED_REGION_1_SIZE 0x2000000
#define PAS_PROTECTED_REGION_1_PAS 0x3

#define PAS_PROTECTED_REGION_2_START_ADDR 0XFC000000
#define PAS_PROTECTED_REGION_2_SIZE 0x1C00000
#define PAS_PROTECTED_REGION_2_PAS 0x0

#define PAS_PROTECTED_REGION_3_START_ADDR 0X80000000
#define PAS_PROTECTED_REGION_3_SIZE 0x7C00000
#define PAS_PROTECTED_REGION_3_PAS 0x1

#define RT_REG_CNT 0x4

#define RT_REG_0_START_ADDR 0xAA430000
#define RT_REG_0_SIZE 0x1000

#define RT_REG_1_START_ADDR 0xAA430000
#define RT_REG_1_SIZE 0x1000

#define RT_REG_2_START_ADDR 0xAA430000
#define RT_REG_2_SIZE 0x1000

#define RT_REG_3_START_ADDR 0xAA430000
#define RT_REG_3_SIZE 0x1000

/* Platform's GPC, PAS filter and Root register configuration */
#define GPC_PROTECTED_REGION_ENTRIES(_) \
    _(GPC_PROTECTED_REGION_0_START_ADDR, GPC_PROTECTED_REGION_0_SIZE, GPC_PROTECTED_REGION_0_PAS) \
    _(GPC_PROTECTED_REGION_1_START_ADDR, GPC_PROTECTED_REGION_1_SIZE, GPC_PROTECTED_REGION_1_PAS) \
    _(GPC_PROTECTED_REGION_2_START_ADDR, GPC_PROTECTED_REGION_2_SIZE, GPC_PROTECTED_REGION_2_PAS) \
    _(GPC_PROTECTED_REGION_3_START_ADDR, GPC_PROTECTED_REGION_3_SIZE, GPC_PROTECTED_REGION_3_PAS)

#define PAS_PROTECTED_REGION_ENTRIES(_) \
    _(PAS_PROTECTED_REGION_0_START_ADDR, PAS_PROTECTED_REGION_0_SIZE, PAS_PROTECTED_REGION_0_PAS) \
    _(PAS_PROTECTED_REGION_1_START_ADDR, PAS_PROTECTED_REGION_1_SIZE, PAS_PROTECTED_REGION_1_PAS) \
    _(PAS_PROTECTED_REGION_2_START_ADDR, PAS_PROTECTED_REGION_2_SIZE, PAS_PROTECTED_REGION_2_PAS) \
    _(PAS_PROTECTED_REGION_3_START_ADDR, PAS_PROTECTED_REGION_3_SIZE, PAS_PROTECTED_REGION_3_PAS)

#define RT_REGISTER_ENTRIES(_) \
    _(RT_REG_0_START_ADDR, RT_REG_0_SIZE) \
    _(RT_REG_1_START_ADDR, RT_REG_1_SIZE) \
    _(RT_REG_2_START_ADDR, RT_REG_2_SIZE) \
    _(RT_REG_3_START_ADDR, RT_REG_3_SIZE)

#define EXPAND_PROTECTED_MEM_REGION(base, size, pas) \
    { .base_addr = base, .regn_size = size, .resourse_pas = pas },

#define EXPAND_RT_REG(base, size) \
    { .rt_reg_base_addr = base, .rt_reg_size = size },

#define REGISTER_INFO_TABLE_ENTRIES(_)
/* Example to override:
#define REGISTER_INFO_TABLE_ENTRIES(_) \
    _(PCIE_RP, 0x100, 0x880200000, RMSD_WRITE_PROTECT) \
    _(INTERCONNECT, 0x000, 0x880201000, RMSD_PROTECT)
*/

#define EXPAND_REGISTER_INFO(type, bdf, addr, prop) \
    { .type = type, .bdf = bdf, .address = addr, .property = prop },

/* Defines related to System memory */
#define PLAT_MTE_PROTECTED_REGION_BASE      0xFFC00000ULL
#define PLAT_MTE_PROTECTED_REGION_SIZE      0x300000   //3 MB

#define PLAT_ROOT_SMEM_BASE  0xFFC00000ULL
#define PLAT_REALM_SMEM_BASE 0XFDC00000ULL

#define PLAT_MSD_SAVE_RESTORE_MEM 0xFFC00000ULL

#define PLAT_RME_RNVS_MAILBOX_MEM 0xFFC00000ULL

/* SMMUv3 Root Regoster Offset */
#define SMMUV3_ROOT_REG_OFFSET  (0x20000)

/* Root watchdog defines */
#define PLAT_RT_WDOG_CTRL 0x2A490000 // 0x2A460000
#define PLAT_RT_WDOG_INT_ID 0x72

/* Non-Volatile Memory */
#define PLAT_RME_ACS_NVM_MEM         0x82800000

/**
 * FREE_MEM_START is the start address of 2MB region which is flat-mapped in EL3 MMU. This
 * region is used for descriptor mappings.
 * FREE_PA_TEST is the base address for free PA which is used in test(EL2).
 * This free PA does not require to be flat-mapped.
 * FREE_VA_TEST is the base VA of 512MB size used in test as free VA.
 * PLAT_FREE_MEM_SMMU is the base free memory to be used in EL3 for Realm SMMU tables which
 * is flat-mapped as REALM PAS (currently using 2MB)
 **/
#define PLAT_FREE_MEM_START   0x880000000ULL
#define PLAT_FREE_VA_TEST     0x880200000ULL
#define PLAT_FREE_PA_TEST     0x880300000ULL
#define PLAT_SHARED_ADDRESS   0xE0000000ULL
#define PLAT_FREE_MEM_SMMU    0x880400000ULL

#define PLAT_MEMORY_POOL_SIZE (2 * 1024 * 1024)
