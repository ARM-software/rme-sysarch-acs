/** @file
 * Copyright (c) 2022-2025, Arm Limited or its affiliates. All rights reserved.
 * SPDX-License-Identifier : Apache-2.0

 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
**/

/* Single-file source of truth
 * - Groups all compile-time defaults (_CT) at the top (both variants)
 * - Provides non-_CT aliases in one place below
 * - Runtime (_RT) macros live in platform_override_rt.h
 */

/* ===== Compile-time defaults (_CT) - BaseFVP only =====
 * Per agreement, we keep BaseFVP compile-time defaults here and layer runtime
 * overrides in platform_override_rt.h. If you need to change platform defaults,
 * edit the *_CT values below.
 */

/* UART */
#define PLATFORM_GENERIC_UART_BASE_CT  0x0
#define PLATFORM_GENERIC_UART_INTID_CT 0x0

/* TIMER base addrs & GSIV */
#define PLATFORM_OVERRIDE_PLATFORM_TIMER_CT      0x0
#define PLATFORM_OVERRIDE_CNTCTL_BASE_CT         0x2A810000
#define PLATFORM_OVERRIDE_CNTREAD_BASE_CT        0x2A800000
#define PLATFORM_OVERRIDE_CNTBASE_N_CT           0x2A830000
#define PLATFORM_OVERRIDE_PLATFORM_TIMER_GSIV_CT 58

/* TIMEOUTS */
#define PLATFORM_OVERRIDE_TIMEOUT_LARGE_CT  0x10000
#define PLATFORM_OVERRIDE_TIMEOUT_MEDIUM_CT 0x1000
#define PLATFORM_OVERRIDE_TIMEOUT_SMALL_CT  0x10

/* EL2 virtual timer */
#define PLATFORM_OVERRIDE_EL2_VIR_TIMER_GSIV_CT 28

/* Watchdog */
#define PLATFORM_OVERRIDE_WD_REFRESH_BASE_CT 0x2A450000
#define PLATFORM_OVERRIDE_WD_CTRL_BASE_CT    0x2A440000
#define PLATFORM_OVERRIDE_WD_GSIV_CT         93

/* CNTFRQ */
#define PLATFORM_OVERRIDE_TIMER_CNTFRQ_CT 0x0

/* PCIe */
#define PLATFORM_OVERRIDE_PCIE_ECAM_BASE_CT     0x0
#define PLATFORM_OVERRIDE_PCIE_START_BUS_NUM_CT 0
#define PLATFORM_OVERRIDE_MAX_BDF_CT            0
#define PLATFORM_OVERRIDE_PCIE_MAX_BUS_CT       256
#define PLATFORM_OVERRIDE_PCIE_MAX_DEV_CT       32
#define PLATFORM_OVERRIDE_PCIE_MAX_FUNC_CT      8

/* SMMU */
#define PLATFORM_OVERRIDE_SMMU_BASE_CT       0x0
#define PLATFORM_OVERRIDE_SMMU_ARCH_MAJOR_CT 3

/* Feature flags */
#define IS_LEGACY_TZ_ENABLED_CT            0
#define IS_NS_ENCRYPTION_PROGRAMMABLE_CT   0
#define IS_PAS_FILTER_MODE_PROGRAMMABLE_CT 0

/* Protected regions (GPC and PAS) */
#define GPC_PROTECTED_REGION_CNT_CT          0x4
#define GPC_PROTECTED_REGION_0_START_ADDR_CT 0xFFC00000
#define GPC_PROTECTED_REGION_0_SIZE_CT       0x300000
#define GPC_PROTECTED_REGION_0_PAS_CT        0x2
#define GPC_PROTECTED_REGION_1_START_ADDR_CT 0xFDC00000
#define GPC_PROTECTED_REGION_1_SIZE_CT       0x2000000
#define GPC_PROTECTED_REGION_1_PAS_CT        0x3
#define GPC_PROTECTED_REGION_2_START_ADDR_CT 0xFC000000
#define GPC_PROTECTED_REGION_2_SIZE_CT       0x1C00000
#define GPC_PROTECTED_REGION_2_PAS_CT        0x0
#define GPC_PROTECTED_REGION_3_START_ADDR_CT 0x80000000
#define GPC_PROTECTED_REGION_3_SIZE_CT       0x7C000000
#define GPC_PROTECTED_REGION_3_PAS_CT        0x1

#define PAS_PROTECTED_REGION_CNT_CT          0x4
#define PAS_PROTECTED_REGION_0_START_ADDR_CT 0xFFC00000
#define PAS_PROTECTED_REGION_0_SIZE_CT       0x3000000
#define PAS_PROTECTED_REGION_0_PAS_CT        0x2
#define PAS_PROTECTED_REGION_1_START_ADDR_CT 0xFDC00000
#define PAS_PROTECTED_REGION_1_SIZE_CT       0x2000000
#define PAS_PROTECTED_REGION_1_PAS_CT        0x3
#define PAS_PROTECTED_REGION_2_START_ADDR_CT 0xFC000000
#define PAS_PROTECTED_REGION_2_SIZE_CT       0x1C00000
#define PAS_PROTECTED_REGION_2_PAS_CT        0x0
#define PAS_PROTECTED_REGION_3_START_ADDR_CT 0x80000000
#define PAS_PROTECTED_REGION_3_SIZE_CT       0x7C00000
#define PAS_PROTECTED_REGION_3_PAS_CT        0x1

/* RT register ranges */
#define RT_REG_CNT_CT          0x4
#define RT_REG_0_START_ADDR_CT 0xAA430000
#define RT_REG_0_SIZE_CT       0x1000
#define RT_REG_1_START_ADDR_CT 0xAA430000
#define RT_REG_1_SIZE_CT       0x1000
#define RT_REG_2_START_ADDR_CT 0xAA430000
#define RT_REG_2_SIZE_CT       0x1000
#define RT_REG_3_START_ADDR_CT 0xAA430000
#define RT_REG_3_SIZE_CT       0x1000

/* Capacities for static arrays (UEFI PAL uses these for bounds) */
#define RT_REG_CAP               RT_REG_CNT_CT
#define GPC_PROTECTED_REGION_CAP GPC_PROTECTED_REGION_CNT_CT
#define PAS_PROTECTED_REGION_CAP PAS_PROTECTED_REGION_CNT_CT

/* MTE protected region */
#define PLAT_MTE_PROTECTED_REGION_BASE_CT 0xFFC00000
#define PLAT_MTE_PROTECTED_REGION_SIZE_CT 0x300000

/* SMMUv3 Root Register Offset (set to 0; EL3 shared_data provides the runtime value) */
#define SMMUV3_ROOT_REG_OFFSET_CT 0x0

/* System memory (kept 0; EL3/INI provide runtime values where needed) */
#define PLAT_ROOT_SMEM_BASE_CT       0x0
#define PLAT_REALM_SMEM_BASE_CT      0x0
#define PLAT_MSD_SAVE_RESTORE_MEM_CT 0x0
#define PLAT_RME_RNVS_MAILBOX_MEM_CT 0x0

/* Root watchdog (set base to 0; read from EL3 shared_data when available) */
#define PLAT_RT_WDOG_CTRL_CT   0x0
#define PLAT_RT_WDOG_INT_ID_CT 0x72

/* Non-volatile memory (set to 0 to defer to runtime/platform sources) */
#define PLAT_RME_ACS_NVM_MEM_CT 0x82800000

/* Free memory parameters (set to 0; EL3 shared_data provides runtime values) */
#define PLAT_FREE_MEM_START_CT 0x0
#define PLAT_FREE_VA_TEST_CT   0x0
#define PLAT_FREE_PA_TEST_CT   0x0
#define PLAT_FREE_MEM_SMMU_CT  0x0

/* ===== Aliases and helpers (non-_CT) ===== */

/* PLATFORM_BASEFVP macro not required; variants resolved via includes. */

/* UART */
#define PLATFORM_GENERIC_UART_BASE  PLATFORM_GENERIC_UART_BASE_CT
#define PLATFORM_GENERIC_UART_INTID PLATFORM_GENERIC_UART_INTID_CT

/* TIMER */
#define PLATFORM_OVERRIDE_PLATFORM_TIMER      PLATFORM_OVERRIDE_PLATFORM_TIMER_CT
#define PLATFORM_OVERRIDE_CNTCTL_BASE         PLATFORM_OVERRIDE_CNTCTL_BASE_CT
#define PLATFORM_OVERRIDE_CNTREAD_BASE        PLATFORM_OVERRIDE_CNTREAD_BASE_CT
#define PLATFORM_OVERRIDE_CNTBASE_N           PLATFORM_OVERRIDE_CNTBASE_N_CT
#define PLATFORM_OVERRIDE_PLATFORM_TIMER_GSIV PLATFORM_OVERRIDE_PLATFORM_TIMER_GSIV_CT

/* TIMEOUTS */
#define PLATFORM_OVERRIDE_TIMEOUT_LARGE  PLATFORM_OVERRIDE_TIMEOUT_LARGE_CT
#define PLATFORM_OVERRIDE_TIMEOUT_MEDIUM PLATFORM_OVERRIDE_TIMEOUT_MEDIUM_CT
#define PLATFORM_OVERRIDE_TIMEOUT_SMALL  PLATFORM_OVERRIDE_TIMEOUT_SMALL_CT

/* EL2 timer */
#define PLATFORM_OVERRIDE_EL2_VIR_TIMER_GSIV PLATFORM_OVERRIDE_EL2_VIR_TIMER_GSIV_CT

/* Watchdog */
#define PLATFORM_OVERRIDE_WD_REFRESH_BASE PLATFORM_OVERRIDE_WD_REFRESH_BASE_CT
#define PLATFORM_OVERRIDE_WD_CTRL_BASE    PLATFORM_OVERRIDE_WD_CTRL_BASE_CT
#define PLATFORM_OVERRIDE_WD_GSIV         PLATFORM_OVERRIDE_WD_GSIV_CT

/* CNTFRQ */
#define PLATFORM_OVERRIDE_TIMER_CNTFRQ PLATFORM_OVERRIDE_TIMER_CNTFRQ_CT

/* PCIe */
#define PLATFORM_OVERRIDE_PCIE_ECAM_BASE     PLATFORM_OVERRIDE_PCIE_ECAM_BASE_CT
#define PLATFORM_OVERRIDE_PCIE_START_BUS_NUM PLATFORM_OVERRIDE_PCIE_START_BUS_NUM_CT
#define PLATFORM_OVERRIDE_MAX_BDF            PLATFORM_OVERRIDE_MAX_BDF_CT
#define PLATFORM_OVERRIDE_PCIE_MAX_BUS       PLATFORM_OVERRIDE_PCIE_MAX_BUS_CT
#define PLATFORM_OVERRIDE_PCIE_MAX_DEV       PLATFORM_OVERRIDE_PCIE_MAX_DEV_CT
#define PLATFORM_OVERRIDE_PCIE_MAX_FUNC      PLATFORM_OVERRIDE_PCIE_MAX_FUNC_CT

/* SMMU */
#define PLATFORM_OVERRIDE_SMMU_BASE       PLATFORM_OVERRIDE_SMMU_BASE_CT
#define PLATFORM_OVERRIDE_SMMU_ARCH_MAJOR PLATFORM_OVERRIDE_SMMU_ARCH_MAJOR_CT

/* Feature flags */
#define IS_LEGACY_TZ_ENABLED            IS_LEGACY_TZ_ENABLED_CT
#define IS_NS_ENCRYPTION_PROGRAMMABLE   IS_NS_ENCRYPTION_PROGRAMMABLE_CT
#define IS_PAS_FILTER_MODE_PROGRAMMABLE IS_PAS_FILTER_MODE_PROGRAMMABLE_CT

/* Protected region aliases */
#define GPC_PROTECTED_REGION_CNT          GPC_PROTECTED_REGION_CNT_CT
#define GPC_PROTECTED_REGION_0_START_ADDR GPC_PROTECTED_REGION_0_START_ADDR_CT
#define GPC_PROTECTED_REGION_0_SIZE       GPC_PROTECTED_REGION_0_SIZE_CT
#define GPC_PROTECTED_REGION_0_PAS        GPC_PROTECTED_REGION_0_PAS_CT
#define GPC_PROTECTED_REGION_1_START_ADDR GPC_PROTECTED_REGION_1_START_ADDR_CT
#define GPC_PROTECTED_REGION_1_SIZE       GPC_PROTECTED_REGION_1_SIZE_CT
#define GPC_PROTECTED_REGION_1_PAS        GPC_PROTECTED_REGION_1_PAS_CT
#define GPC_PROTECTED_REGION_2_START_ADDR GPC_PROTECTED_REGION_2_START_ADDR_CT
#define GPC_PROTECTED_REGION_2_SIZE       GPC_PROTECTED_REGION_2_SIZE_CT
#define GPC_PROTECTED_REGION_2_PAS        GPC_PROTECTED_REGION_2_PAS_CT
#define GPC_PROTECTED_REGION_3_START_ADDR GPC_PROTECTED_REGION_3_START_ADDR_CT
#define GPC_PROTECTED_REGION_3_SIZE       GPC_PROTECTED_REGION_3_SIZE_CT
#define GPC_PROTECTED_REGION_3_PAS        GPC_PROTECTED_REGION_3_PAS_CT

#define PAS_PROTECTED_REGION_CNT          PAS_PROTECTED_REGION_CNT_CT
#define PAS_PROTECTED_REGION_0_START_ADDR PAS_PROTECTED_REGION_0_START_ADDR_CT
#define PAS_PROTECTED_REGION_0_SIZE       PAS_PROTECTED_REGION_0_SIZE_CT
#define PAS_PROTECTED_REGION_0_PAS        PAS_PROTECTED_REGION_0_PAS_CT
#define PAS_PROTECTED_REGION_1_START_ADDR PAS_PROTECTED_REGION_1_START_ADDR_CT
#define PAS_PROTECTED_REGION_1_SIZE       PAS_PROTECTED_REGION_1_SIZE_CT
#define PAS_PROTECTED_REGION_1_PAS        PAS_PROTECTED_REGION_1_PAS_CT
#define PAS_PROTECTED_REGION_2_START_ADDR PAS_PROTECTED_REGION_2_START_ADDR_CT
#define PAS_PROTECTED_REGION_2_SIZE       PAS_PROTECTED_REGION_2_SIZE_CT
#define PAS_PROTECTED_REGION_2_PAS        PAS_PROTECTED_REGION_2_PAS_CT
#define PAS_PROTECTED_REGION_3_START_ADDR PAS_PROTECTED_REGION_3_START_ADDR_CT
#define PAS_PROTECTED_REGION_3_SIZE       PAS_PROTECTED_REGION_3_SIZE_CT
#define PAS_PROTECTED_REGION_3_PAS        PAS_PROTECTED_REGION_3_PAS_CT

/* RT register ranges */
#define RT_REG_CNT          RT_REG_CNT_CT
#define RT_REG_0_START_ADDR RT_REG_0_START_ADDR_CT
#define RT_REG_0_SIZE       RT_REG_0_SIZE_CT
#define RT_REG_1_START_ADDR RT_REG_1_START_ADDR_CT
#define RT_REG_1_SIZE       RT_REG_1_SIZE_CT
#define RT_REG_2_START_ADDR RT_REG_2_START_ADDR_CT
#define RT_REG_2_SIZE       RT_REG_2_SIZE_CT
#define RT_REG_3_START_ADDR RT_REG_3_START_ADDR_CT
#define RT_REG_3_SIZE       RT_REG_3_SIZE_CT

/* MTE protected region */
#define PLAT_MTE_PROTECTED_REGION_BASE PLAT_MTE_PROTECTED_REGION_BASE_CT
#define PLAT_MTE_PROTECTED_REGION_SIZE PLAT_MTE_PROTECTED_REGION_SIZE_CT

/* SMMUv3 Root Register Offset */
#define SMMUV3_ROOT_REG_OFFSET SMMUV3_ROOT_REG_OFFSET_CT

/* System memory */
#define PLAT_ROOT_SMEM_BASE       PLAT_ROOT_SMEM_BASE_CT
#define PLAT_REALM_SMEM_BASE      PLAT_REALM_SMEM_BASE_CT
#define PLAT_MSD_SAVE_RESTORE_MEM PLAT_MSD_SAVE_RESTORE_MEM_CT
#define PLAT_RME_RNVS_MAILBOX_MEM PLAT_RME_RNVS_MAILBOX_MEM_CT

/* Root watchdog */
#define PLAT_RT_WDOG_CTRL   PLAT_RT_WDOG_CTRL_CT
#define PLAT_RT_WDOG_INT_ID PLAT_RT_WDOG_INT_ID_CT

/* Non-volatile memory */
#define PLAT_RME_ACS_NVM_MEM PLAT_RME_ACS_NVM_MEM_CT

/* Free memory parameters */
#define PLAT_FREE_MEM_START PLAT_FREE_MEM_START_CT
#define PLAT_FREE_VA_TEST   PLAT_FREE_VA_TEST_CT
#define PLAT_FREE_PA_TEST   PLAT_FREE_PA_TEST_CT
#define PLAT_FREE_MEM_SMMU  PLAT_FREE_MEM_SMMU_CT

/* Memory pool size: 0 here; EL3 may provide cfg_memory_pool_size */
#define PLAT_MEMORY_POOL_SIZE 0

/* ------------ Expansion Macros ------------ */
#define EXPAND_PROTECTED_MEM_REGION(base, size, pas) \
  {.base_addr = base, .regn_size = size, .resourse_pas = pas},

#define GPC_PROTECTED_REGION_ENTRIES(_)                                                         \
  _(GPC_PROTECTED_REGION_0_START_ADDR, GPC_PROTECTED_REGION_0_SIZE, GPC_PROTECTED_REGION_0_PAS) \
  _(GPC_PROTECTED_REGION_1_START_ADDR, GPC_PROTECTED_REGION_1_SIZE, GPC_PROTECTED_REGION_1_PAS) \
  _(GPC_PROTECTED_REGION_2_START_ADDR, GPC_PROTECTED_REGION_2_SIZE, GPC_PROTECTED_REGION_2_PAS) \
  _(GPC_PROTECTED_REGION_3_START_ADDR, GPC_PROTECTED_REGION_3_SIZE, GPC_PROTECTED_REGION_3_PAS)

#define PAS_PROTECTED_REGION_ENTRIES(_)                                                         \
  _(PAS_PROTECTED_REGION_0_START_ADDR, PAS_PROTECTED_REGION_0_SIZE, PAS_PROTECTED_REGION_0_PAS) \
  _(PAS_PROTECTED_REGION_1_START_ADDR, PAS_PROTECTED_REGION_1_SIZE, PAS_PROTECTED_REGION_1_PAS) \
  _(PAS_PROTECTED_REGION_2_START_ADDR, PAS_PROTECTED_REGION_2_SIZE, PAS_PROTECTED_REGION_2_PAS) \
  _(PAS_PROTECTED_REGION_3_START_ADDR, PAS_PROTECTED_REGION_3_SIZE, PAS_PROTECTED_REGION_3_PAS)

#define EXPAND_RT_REG(base, size) {.rt_reg_base_addr = base, .rt_reg_size = size},

#define RT_REGISTER_ENTRIES(_)          \
  _(RT_REG_0_START_ADDR, RT_REG_0_SIZE) \
  _(RT_REG_1_START_ADDR, RT_REG_1_SIZE) \
  _(RT_REG_2_START_ADDR, RT_REG_2_SIZE) \
  _(RT_REG_3_START_ADDR, RT_REG_3_SIZE)

#define EXPAND_REGISTER_INFO(type, bdf, addr, prop) \
  {.type = type, .bdf = bdf, .address = addr, .property = prop},

#define REGISTER_INFO_TABLE_ENTRIES(_)
/* Example to override:
#define REGISTER_INFO_TABLE_ENTRIES(_) \
    _(PCIE_RP, 0x100, 0x880200000, RMSD_WRITE_PROTECT) \
    _(INTERCONNECT, 0x000, 0x880201000, RMSD_PROTECT)
*/

#define PLATFORM_OVERRIDE_RP_REG_NUM_ENTRIES 0
